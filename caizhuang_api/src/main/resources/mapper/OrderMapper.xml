<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.susu.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.susu.entity.Order">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="add_id" jdbcType="INTEGER" property="addId" />
    <result column="totalPrice" jdbcType="REAL" property="totalprice" />
    <result column="deliveryMethod" jdbcType="VARCHAR" property="deliverymethod" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="payMethod" jdbcType="VARCHAR" property="paymethod" />
    <result column="status" jdbcType="CHAR" property="status" />
  </resultMap>

  <!--  关联查询-->
  <resultMap id="WithAddressResultMap" type="com.susu.entity.Order">
    <id column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="add_id" jdbcType="INTEGER" property="addId" />
    <result column="totalPrice" jdbcType="REAL" property="totalprice" />
    <result column="deliveryMethod" jdbcType="VARCHAR" property="deliverymethod" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="payMethod" jdbcType="VARCHAR" property="paymethod" />
    <result column="status" jdbcType="CHAR" property="status" />
    <!-- 关联对象 -->
    <association property="address" javaType="com.susu.entity.Address">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="user_id" jdbcType="INTEGER" property="userId" />
      <result column="address" jdbcType="VARCHAR" property="address" />
      <result column="postcode" jdbcType="VARCHAR" property="postcode" />
      <result column="status" jdbcType="VARCHAR" property="status" />
      <result column="detail" jdbcType="VARCHAR" property="detail" />
      <result column="rece_phone" jdbcType="VARCHAR" property="recePhone" />
      <result column="rece_name" jdbcType="VARCHAR" property="receName" />
    </association>
  </resultMap>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, user_id, add_id, totalPrice, deliveryMethod, memo, create_time, payMethod, 
    status
  </sql>
  <sql id="WithAddress_List">
    order_id, o.user_id, add_id, totalPrice, deliveryMethod, memo, create_time, payMethod,
    o.status,a.*
  </sql>

  <!--生成订单号  -->
  <insert id="insert" parameterType="com.susu.entity.Order">
    insert into tb_order (order_id, user_id, add_id,
                          totalPrice, deliveryMethod, memo,
                          create_time, payMethod, status)
    values (#{orderId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{addId,jdbcType=INTEGER},
            #{totalprice,jdbcType=REAL}, #{deliverymethod,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP}, #{paymethod,jdbcType=VARCHAR}, #{status,jdbcType=CHAR})
  </insert>

  <!--  修改订单状态 1表示订单已付款updateByPrimaryKey-->
  <update id="updateByPrimaryKey" parameterType="com.susu.entity.Order">
    update tb_order
    set payMethod = #{paymethod,jdbcType=VARCHAR},
        status=1
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>

  <!-- showOrder-->
  <select id="showOrder" parameterType="com.susu.entity.Order" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tb_order
    where user_id = #{userId,jdbcType=INTEGER}
    <if test="status  !=null and status  !='  ' ">
      and status=#{status,jdbcType=CHAR}
    </if>
    order by create_time desc
  </select>

  <!--  showOrderDetail   查看订单详情WithAddressResultMap-->
<!--  SELECT  o.*,a.* FROM tb_order o LEFT JOIN tb_address a ON o.add_id=a.id  WHERE o.order_id='2021032519115451266'-->
  <select id="showOrderDetail" parameterType="com.susu.entity.Order" resultMap="WithAddressResultMap">
    select
    <include refid="WithAddress_List" />
    from tb_order o LEFT JOIN tb_address a ON o.add_id=a.id
    where o.order_id= #{orderId,jdbcType=VARCHAR}
  </select>

  <!-- updateStatus    修改订单的状态-->
  <update id="updateStatus" parameterType="com.susu.entity.Order">
    update tb_order
    set status=#{status,jdbcType=CHAR}
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>

<!--  updateOrderStatus  当评价完成的时候修改订单的状态，，，本来可以和上面公用一个 但是那个参数是一个对象 哎！考虑不周-->
  <update id="updateOrderStatus" parameterType="java.lang.String">
    update tb_order
    set status=5
--     更改订单的状态为5，表示评价完毕 ，订单完成。
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>



  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_order
    where order_id = #{orderId,jdbcType=VARCHAR}
  </delete>
  <insert id="insertSelective" parameterType="com.susu.entity.Order">
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="addId != null">
        add_id,
      </if>
      <if test="totalprice != null">
        totalPrice,
      </if>
      <if test="deliverymethod != null">
        deliveryMethod,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="paymethod != null">
        payMethod,
      </if>
      <if test="status != null">
        status,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="addId != null">
        #{addId,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null">
        #{totalprice,jdbcType=REAL},
      </if>
      <if test="deliverymethod != null">
        #{deliverymethod,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="paymethod != null">
        #{paymethod,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_order
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.addId != null">
        add_id = #{record.addId,jdbcType=INTEGER},
      </if>
      <if test="record.totalprice != null">
        totalPrice = #{record.totalprice,jdbcType=REAL},
      </if>
      <if test="record.deliverymethod != null">
        deliveryMethod = #{record.deliverymethod,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.paymethod != null">
        payMethod = #{record.paymethod,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryStatus != null">
        delivery_status = #{record.deliveryStatus,jdbcType=CHAR},
      </if>
      <if test="record.receiptStatus != null">
        receipt_status = #{record.receiptStatus,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_order
    set order_id = #{record.orderId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      add_id = #{record.addId,jdbcType=INTEGER},
      totalPrice = #{record.totalprice,jdbcType=REAL},
      deliveryMethod = #{record.deliverymethod,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      payMethod = #{record.paymethod,jdbcType=VARCHAR},
      delivery_status = #{record.deliveryStatus,jdbcType=CHAR},
      receipt_status = #{record.receiptStatus,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.susu.entity.Order">
    update tb_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="addId != null">
        add_id = #{addId,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null">
        totalPrice = #{totalprice,jdbcType=REAL},
      </if>
      <if test="deliverymethod != null">
        deliveryMethod = #{deliverymethod,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="paymethod != null">
        payMethod = #{paymethod,jdbcType=VARCHAR},
      </if>
      <if test="deliveryStatus != null">
        delivery_status = #{deliveryStatus,jdbcType=CHAR},
      </if>
      <if test="receiptStatus != null">
        receipt_status = #{receiptStatus,jdbcType=CHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>

</mapper>