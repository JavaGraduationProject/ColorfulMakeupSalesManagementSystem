<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.susu.dao.FavouriteMapper">
  <resultMap id="BaseResultMap" type="com.susu.entity.Favourite">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
  </resultMap>

  <resultMap id="CollResultMap" type="com.susu.entity.Favourite">
    <id column="likeId" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <!-- 指定联合查询出的部门字段的封装 -->
    <association property="goods" javaType="com.susu.entity.Goods">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="goodsType_id" jdbcType="INTEGER" property="goodstypeId" />
      <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
      <result column="producing_area" jdbcType="VARCHAR" property="producingArea" />
      <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
      <result column="price" jdbcType="DECIMAL" property="price" />
      <result column="sell_price" jdbcType="DECIMAL" property="sellPrice" />
      <result column="stock" jdbcType="INTEGER" property="stock" />
      <result column="picture" jdbcType="VARCHAR" property="picture" />
      <result column="discount" jdbcType="INTEGER" property="discount" />
      <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
      <result column="onSale" jdbcType="INTEGER" property="onsale" />
      <result column="remark" jdbcType="INTEGER" property="remark" />
      <result column="soldNum" jdbcType="INTEGER" property="soldNum" />
      <result column="description" jdbcType="LONGVARCHAR" property="description" />
    </association>
  </resultMap>


  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, goods_id
  </sql>
  <sql id="withGoods_Column_List">
    c.id likeId, c.user_id, c.goods_id, g.*
  </sql>

  <!--  likeSearch  在收藏夹页面 搜索收藏夹里面的商品 当搜索不在的时候 显示所有的商品-->
  <select id="likeSearch" parameterType="com.susu.entity.Favourite" resultMap="CollResultMap">
    select
    <include refid="withGoods_Column_List" />
    from tb_collection c LEFT JOIN tb_goods g ON c.goods_id= g.id
    where user_id = #{userId,jdbcType=INTEGER}
    <if test="searchname  !=null and searchname  !='  ' ">
      and goodsName like "%"#{searchname}"%"
    </if>
    order by likeId desc
  </select>

  <!--  showCart 查看收藏夹页面 多表查询 ，连接收藏表和商品表 ，通过商品Id连接-->
  <!--  SELECT  c.*,g.* FROM collection c LEFT JOIN tb_goods g ON c.goods_id= g.id WHERE c.user_id=1-->
  <select id="showLike" parameterType="com.susu.entity.Favourite" resultMap="CollResultMap">
    select
    <include refid="withGoods_Column_List" />
    from tb_collection c LEFT JOIN tb_goods g ON c.goods_id= g.id
    where user_id = #{userId,jdbcType=INTEGER}
    order by likeId desc
  </select>

  <!--  selectByUidAndPid-->
  <select id="selectByUidAndPid" parameterType="com.susu.entity.Favourite" resultType="java.lang.Integer">
    select
    count(*)
    from tb_collection
    where user_id = #{userId,jdbcType=INTEGER} and goods_id=#{goodsId,jdbcType=INTEGER}
  </select>

  <!--  selectByUidAndPid1-->
  <select id="selectByUidAndPid1" resultType="java.lang.Integer">
    select
    count(*)
    from tb_collection
    where user_id = #{userId,jdbcType=INTEGER} and goods_id=#{goodsId,jdbcType=INTEGER}
  </select>
  <!--delete-->
  <delete id="delete" parameterType="com.susu.entity.Favourite">
    delete from tb_collection
    where user_id = #{userId,jdbcType=INTEGER} and goods_id=#{goodsId,jdbcType=INTEGER}
  </delete>


<!--  clearLike-->
  <delete id="clearLike" parameterType="java.lang.Integer">
    delete from tb_collection
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>

  <!--批量删除-->
  <delete id="deleteByBatch" >
    delete from tb_collection
    where id in
    <foreach item="ids" collection="array" open="(" separator="," close=")">
      #{ids}
    </foreach>
  </delete>





  <select id="selectByExample" parameterType="com.susu.entity.FavouriteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_collection
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_collection
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.susu.entity.FavouriteExample">
    delete from tb_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.susu.entity.Favourite">
    insert into tb_collection (user_id, goods_id
      )
    values (#{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}
      )
  </insert>
  <!--  insertByCart-->
  <insert id="insertByCart">
    insert into tb_collection (user_id, goods_id)
    values (#{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER})
  </insert>



  <insert id="insertSelective" parameterType="com.susu.entity.Favourite">
    insert into tb_collection
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.susu.entity.FavouriteExample" resultType="java.lang.Long">
    select count(*) from tb_collection
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_collection
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_collection
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.susu.entity.Favourite">
    update tb_collection
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.susu.entity.Favourite">
    update tb_collection
    set user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>